var app=angular.module("app",["ui.router","toastr","ngSanitize","cgBusy"]);app.value("cgBusyDefaults",{message:"please wait...",backdrop:!0,delay:300}).constant("_",window._).constant("moment",window.moment),app.run(["$rootScope",function($rootScope){jQuery(".navbar .container a").click(function(){jQuery(".navbar-collapse").hasClass("in")&&jQuery("button.navbar-toggle").click()}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){})}]),app.config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/home"),$stateProvider.state("home",{url:"/home",templateUrl:"app/home/home.html",controller:"HomeController",controllerAs:"vm"}).state("admin",{url:"/admin",templateUrl:"app/admin/admin.html",controller:"AdminController",controllerAs:"vm"}).state("admin-edit",{url:"/admin/edit/:phraseId",templateUrl:"app/admin/admin-edit.html",controller:"AdminEditController",controllerAs:"vm"})}]),function(){"use strict";function httpBusyService($http,$q,globalBusyService){function get(message,url){var deferred=$q.defer(),callUrl=url;return $http.get(callUrl).success(function(data,status){deferred.resolve(data)}).error(function(data,status){deferred.reject({data:data,status:status})}),globalBusyService.showBusy(deferred.promise,message),deferred.promise}function post(message,url,data){var deferred=$q.defer(),callUrl=url;return $http.post(callUrl,data).success(function(data,status){deferred.resolve(data)}).error(function(data,status){deferred.reject({data:data,status:status})}),globalBusyService.showBusy(deferred.promise,message),deferred.promise}function put(message,url,data){var deferred=$q.defer(),callUrl=url;return $http.put(callUrl,data).success(function(data,status){deferred.resolve(data)}).error(function(data,status){deferred.reject({data:data,status:status})}),globalBusyService.showBusy(deferred.promise,message),deferred.promise}function deleteThing(message,url){var deferred=$q.defer(),callUrl=url;return $http["delete"](callUrl).success(function(data,status){deferred.resolve(data)}).error(function(data,status){deferred.reject({data:data,status:status})}),globalBusyService.showBusy(deferred.promise,message),deferred.promise}return{get:get,post:post,put:put,"delete":deleteThing}}httpBusyService.$inject=["$http","$q","globalBusyService"],angular.module("app").factory("httpBusyService",["$http","$q","globalBusyService",httpBusyService])}(),function(){"use strict";function globalBusyService($rootScope){function showBusy(promise,busyMessage){$rootScope.busyPromise&&0===$rootScope.busyPromise.$$state.status?$rootScope.busyPromise["finally"](function(){setBusy(promise,busyMessage)}):(busyMessage||(busyMessage="loading..."),setBusy(promise,busyMessage))}function setBusy(promise,busyMessage){setTimeout(function(){$rootScope.busyPromise=promise,$rootScope.busyMessage=busyMessage,$rootScope.$apply()})}return{showBusy:showBusy}}globalBusyService.$inject=["$rootScope"],angular.module("app").factory("globalBusyService",["$rootScope",globalBusyService])}(),function(){"use strict";function appService(toastr,httpBusyService){function checkTweet(tweet){var action="checking tweet";return httpBusyService.post(action,"api/app/tweet/check",tweet)}function savePhrase(phrase){var action="saving phrase";return phrase.id?httpBusyService.put(action,"api/app/phrases/update",phrase):httpBusyService.post(action,"api/app/phrases/add",phrase)}function deletePhrase(id){var action="deleting phrase";return httpBusyService["delete"](action,"api/app/phrases/delete/"+id)}function getPhrases(){var action="getting all phrases";return httpBusyService.get(action,"api/app/phrases/getall")["catch"](function(){notifyError(action)})}function getPhrase(id){var action="loading...";return httpBusyService.get(action,"api/app/phrases/"+id)["catch"](function(error){console.error(error),notifyError(action)})}function notifyError(action){toastr.error(errorString(action,"Error"))}function errorString(action){return"An error occurred "+action+". Please try again."}return{checkTweet:checkTweet,getPhrases:getPhrases,getPhrase:getPhrase,savePhrase:savePhrase,deletePhrase:deletePhrase}}appService.$inject=["toastr","httpBusyService"],angular.module("app").factory("appService",["toastr","httpBusyService",appService])}(),function(){function HomeController($state,$scope,toastr,appService){function activate(){vm.tweet={},vm.tweet.text="",vm.activate=activate,vm.checkTweet=checkTweet,vm.generalError=""}function checkTweet(){return vm.tweet.text?void appService.checkTweet(vm.tweet).then(function(response){console.log(response),vm.generalError="",vm.verbotenCheckPassed=response.verbotenCheckPassed,vm.violations=response.violations},function(error){console.error(error),vm.generalError="Sorry, some error has occurred. Please try again"}):void toastr.warning("Please fill tweet text")}var vm=this;activate()}HomeController.$inject=["$state","$scope","toastr","appService"],angular.module("app").controller("HomeController",["$state","$scope","toastr","appService",HomeController])}(),function(){function AdminController($state,$scope,toastr,appService){function activate(){vm.phrases=[],appService.getPhrases().then(function(response){console.log(response),vm.phrases=response},function(error){console.error(error)})}var vm=this;activate()}AdminController.$inject=["$state","$scope","toastr","appService"],angular.module("app").controller("AdminController",["$state","$scope","toastr","appService",AdminController])}(),function(){function AdminEditController($state,$scope,$stateParams,toastr,appService){function activate(){vm.phrase={},$stateParams.phraseId?appService.getPhrase($stateParams.phraseId).then(function(response){console.log(response),vm.phrase=response},function(error){console.error(error)}):vm.phrase.phrase=""}function savePhrase(){return vm.phrase.phrase?void appService.savePhrase(vm.phrase).then(function(response){vm.phrase=response,toastr.success("Phrase saved successfully")},function(error){console.error(error),toastr.error("Error saving phrase")}):void toastr.warning("Please fill phrase text")}function deletePhrase(){appService.deletePhrase(vm.phrase.id).then(function(response){toastr.success("Phrase deleted successfully"),$state.go("admin")},function(error){console.error(error),toastr.error("Error deleting phrase")})}var vm=this;vm.savePhrase=savePhrase,vm.deletePhrase=deletePhrase,activate(),console.log($stateParams.phraseId)}AdminEditController.$inject=["$state","$scope","$stateParams","toastr","appService"],angular.module("app").controller("AdminEditController",["$state","$scope","$stateParams","toastr","appService",AdminEditController])}();